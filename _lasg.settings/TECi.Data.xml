<?xml version="1.0" encoding="utf-8"?>
<ArrayOfClassModel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <ClassModel ClassName="CourseCategoryDAC" IsUpdated="false" GenerateXmlComments="true" UseDefaultComments="true" XmlComment="CourseCategory data access component. Manages CRUD operations for the CourseCategory table." ProductName="TECi.Data" Body="&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Inserts a new row in the CourseCategory table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;courseCategory&quot;&gt;A CourseCategory object.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;An updated CourseCategory object.&lt;/returns&gt;&#xD;&#xA;		public CourseCategory Create(CourseCategory courseCategory)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;INSERT INTO dbo.CourseCategories ([Category_Name], [Category_Desc], [IdNumber], [parent], [enabled], [created_date], [created_by], [modified_date], [modified_by]) &quot; +&#xD;&#xA;				&quot;VALUES(@Category_Name, @Category_Desc, @IdNumber, @parent, @enabled, @created_date, @created_by, @modified_date, @modified_by); SELECT SCOPE_IDENTITY();&quot; ; &#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			var db = new SqlDatabase(base.ConnectionString);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Category_Name&quot;, DbType.String, courseCategory.Category_Name);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Category_Desc&quot;, DbType.String, courseCategory.Category_Desc);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IdNumber&quot;, DbType.String, courseCategory.IdNumber);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@parent&quot;, DbType.Int32, courseCategory.parent);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@enabled&quot;, DbType.Boolean, courseCategory.enabled);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@created_date&quot;, DbType.DateTime, courseCategory.created_date);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@created_by&quot;, DbType.String, courseCategory.created_by);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@modified_date&quot;, DbType.DateTime, courseCategory.modified_date);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@modified_by&quot;, DbType.String, courseCategory.modified_by);&#xD;&#xA;&#xD;&#xA;				// Get the primary key value.&#xD;&#xA;				courseCategory.Id = Convert.ToInt32(db.ExecuteScalar(cmd));&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return courseCategory;&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Updates an existing row in the CourseCategory table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;courseCategory&quot;&gt;A CourseCategory entity object.&lt;/param&gt;&#xD;&#xA;		public void UpdateById(CourseCategory courseCategory)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;UPDATE dbo.CourseCategories &quot; +&#xD;&#xA;				&quot;SET &quot; +&#xD;&#xA;					&quot;[Category_Name]=@Category_Name, &quot; +&#xD;&#xA;					&quot;[Category_Desc]=@Category_Desc, &quot; +&#xD;&#xA;					&quot;[IdNumber]=@IdNumber, &quot; +&#xD;&#xA;					&quot;[parent]=@parent, &quot; +&#xD;&#xA;					&quot;[enabled]=@enabled, &quot; +&#xD;&#xA;					&quot;[created_date]=@created_date, &quot; +&#xD;&#xA;					&quot;[created_by]=@created_by, &quot; +&#xD;&#xA;					&quot;[modified_date]=@modified_date, &quot; +&#xD;&#xA;					&quot;[modified_by]=@modified_by &quot; +&#xD;&#xA;				&quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			var db = new SqlDatabase(base.ConnectionString);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Category_Name&quot;, DbType.String, courseCategory.Category_Name);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Category_Desc&quot;, DbType.String, courseCategory.Category_Desc);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IdNumber&quot;, DbType.String, courseCategory.IdNumber);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@parent&quot;, DbType.Int32, courseCategory.parent);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@enabled&quot;, DbType.Boolean, courseCategory.enabled);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@created_date&quot;, DbType.DateTime, courseCategory.created_date);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@created_by&quot;, DbType.String, courseCategory.created_by);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@modified_date&quot;, DbType.DateTime, courseCategory.modified_date);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@modified_by&quot;, DbType.String, courseCategory.modified_by);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, courseCategory.Id);&#xD;&#xA;&#xD;&#xA;				db.ExecuteNonQuery(cmd);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Conditionally deletes one or more rows in the CourseCategory table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;id&quot;&gt;A id value.&lt;/param&gt;&#xD;&#xA;		public void DeleteById(int id)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &quot;DELETE dbo.CourseCategories &quot; +&#xD;&#xA;										 &quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			var db = new SqlDatabase(base.ConnectionString);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, id);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;				db.ExecuteNonQuery(cmd);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Returns a row from the CourseCategory table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;id&quot;&gt;A Id value.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;A CourseCategory object with data populated from the database.&lt;/returns&gt;&#xD;&#xA;		public CourseCategory SelectById(int id)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;SELECT [Id], [Category_Name], [Category_Desc], [IdNumber], [parent], [enabled], [created_date]&quot;+&#xD;&#xA;						&quot;, [created_by], [modified_date], [modified_by] &quot; +&#xD;&#xA;				&quot;FROM dbo.CourseCategories  &quot;  +&#xD;&#xA;				&quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			CourseCategory courseCategory = null;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			var db = new SqlDatabase(base.ConnectionString);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, id);&#xD;&#xA;&#xD;&#xA;				using (IDataReader dr = db.ExecuteReader(cmd))&#xD;&#xA;				{&#xD;&#xA;					if (dr.Read())&#xD;&#xA;					{&#xD;&#xA;						// Create a new CourseCategory&#xD;&#xA;						courseCategory = new CourseCategory();&#xD;&#xA;&#xD;&#xA;						// Read values.&#xD;&#xA;						courseCategory.Id = GetDataValue&lt;int&gt;(dr, &quot;Id&quot;);&#xD;&#xA;						courseCategory.Category_Name = GetDataValue&lt;string&gt;(dr, &quot;Category_Name&quot;);&#xD;&#xA;						courseCategory.Category_Desc = GetDataValue&lt;string&gt;(dr, &quot;Category_Desc&quot;);&#xD;&#xA;						courseCategory.IdNumber = GetDataValue&lt;string&gt;(dr, &quot;IdNumber&quot;);&#xD;&#xA;						courseCategory.parent = GetDataValue&lt;int&gt;(dr, &quot;parent&quot;);&#xD;&#xA;						courseCategory.enabled = GetDataValue&lt;bool&gt;(dr, &quot;enabled&quot;);&#xD;&#xA;						courseCategory.created_date = GetDataValue&lt;DateTime&gt;(dr, &quot;created_date&quot;);&#xD;&#xA;						courseCategory.created_by = GetDataValue&lt;string&gt;(dr, &quot;created_by&quot;);&#xD;&#xA;						courseCategory.modified_date = GetDataValue&lt;DateTime&gt;(dr, &quot;modified_date&quot;);&#xD;&#xA;						courseCategory.modified_by = GetDataValue&lt;string&gt;(dr, &quot;modified_by&quot;);&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return courseCategory;&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Conditionally retrieves one or more rows from the CourseCategory table with paging.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;currentPage&quot;&gt;The currentPage value.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;A collection of CourseCategory objects.&lt;/returns&gt;		&#xD;&#xA;		public List&lt;CourseCategory&gt; SelectPage(int currentPage)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;WITH SortedCourseCategories AS &quot; +&#xD;&#xA;				&quot;(SELECT ROW_NUMBER() OVER (ORDER BY [created_date] DESC) AS RowNumber, &quot; +&#xD;&#xA;					&quot;[Id], [Category_Name], [Category_Desc], [IdNumber], [parent], [enabled], [created_date]&quot;+&#xD;&#xA;						&quot;, [created_by], [modified_date], [modified_by] &quot; + &#xD;&#xA;					&quot;FROM dbo.CourseCategories &quot; +&#xD;&#xA;				&quot;) SELECT * FROM SortedCourseCategories &quot; +&#xD;&#xA;				&quot;WHERE RowNumber BETWEEN @StartIndex AND @EndIndex&quot;;&#xD;&#xA;&#xD;&#xA;			// PageSize is retrieved from config file via the base class.&#xD;&#xA;            long startIndex = (currentPage * base.PageSize);&#xD;&#xA;            long endIndex = startIndex + base.PageSize;&#xD;&#xA;&#xD;&#xA;            startIndex += 1;&#xD;&#xA;			List&lt;CourseCategory&gt; result = new List&lt;CourseCategory&gt;();&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			var db = new SqlDatabase(base.ConnectionString);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{ &#xD;&#xA;				// Paging parameters.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@StartIndex&quot;, DbType.Int64, startIndex);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@EndIndex&quot;, DbType.Int64, endIndex);&#xD;&#xA;		&#xD;&#xA;				using (IDataReader dr = db.ExecuteReader(cmd))&#xD;&#xA;				{&#xD;&#xA;					while (dr.Read())&#xD;&#xA;					{&#xD;&#xA;						// Create a new CourseCategory&#xD;&#xA;						CourseCategory courseCategory = new CourseCategory();&#xD;&#xA;&#xD;&#xA;						// Read values.&#xD;&#xA;						courseCategory.Id = GetDataValue&lt;int&gt;(dr, &quot;Id&quot;);&#xD;&#xA;						courseCategory.Category_Name = GetDataValue&lt;string&gt;(dr, &quot;Category_Name&quot;);&#xD;&#xA;						courseCategory.Category_Desc = GetDataValue&lt;string&gt;(dr, &quot;Category_Desc&quot;);&#xD;&#xA;						courseCategory.IdNumber = GetDataValue&lt;string&gt;(dr, &quot;IdNumber&quot;);&#xD;&#xA;						courseCategory.parent = GetDataValue&lt;int&gt;(dr, &quot;parent&quot;);&#xD;&#xA;						courseCategory.enabled = GetDataValue&lt;bool&gt;(dr, &quot;enabled&quot;);&#xD;&#xA;						courseCategory.created_date = GetDataValue&lt;DateTime&gt;(dr, &quot;created_date&quot;);&#xD;&#xA;						courseCategory.created_by = GetDataValue&lt;string&gt;(dr, &quot;created_by&quot;);&#xD;&#xA;						courseCategory.modified_date = GetDataValue&lt;DateTime&gt;(dr, &quot;modified_date&quot;);&#xD;&#xA;						courseCategory.modified_by = GetDataValue&lt;string&gt;(dr, &quot;modified_by&quot;);&#xD;&#xA;&#xD;&#xA;						// Add to List.&#xD;&#xA;						result.Add(courseCategory);&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return result;&#xD;&#xA;		}&#xD;&#xA;">
    <NamespacesToImport />
    <Methods>
      <MethodModel Name="Create" EntityName="CourseCategory" TableName="CourseCategories" SchemaName="dbo" TableAlias="A" Type="Insert" IsUpdated="false" XmlComment="Inserts a new row in the CourseCategory table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="CourseCategories" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Category_Name" TableName="CourseCategories" PropertyName="Category_Name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Category_Desc" TableName="CourseCategories" PropertyName="Category_Desc" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IdNumber" TableName="CourseCategories" PropertyName="IdNumber" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="parent" TableName="CourseCategories" PropertyName="parent" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="enabled" TableName="CourseCategories" PropertyName="enabled" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_date" TableName="CourseCategories" PropertyName="created_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_by" TableName="CourseCategories" PropertyName="created_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_date" TableName="CourseCategories" PropertyName="modified_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_by" TableName="CourseCategories" PropertyName="modified_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns />
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="UpdateById" EntityName="CourseCategory" TableName="CourseCategories" SchemaName="dbo" TableAlias="A" Type="UpdateObject" IsUpdated="false" XmlComment="Updates an existing row in the CourseCategory table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="CourseCategories" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Category_Name" TableName="CourseCategories" PropertyName="Category_Name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Category_Desc" TableName="CourseCategories" PropertyName="Category_Desc" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IdNumber" TableName="CourseCategories" PropertyName="IdNumber" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="parent" TableName="CourseCategories" PropertyName="parent" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="enabled" TableName="CourseCategories" PropertyName="enabled" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_date" TableName="CourseCategories" PropertyName="created_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_by" TableName="CourseCategories" PropertyName="created_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_date" TableName="CourseCategories" PropertyName="modified_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_by" TableName="CourseCategories" PropertyName="modified_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="CourseCategories" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="DeleteById" EntityName="CourseCategory" TableName="CourseCategories" SchemaName="dbo" TableAlias="A" Type="Delete" IsUpdated="false" XmlComment="Conditionally deletes one or more rows in the CourseCategory table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns />
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="CourseCategories" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="SelectById" EntityName="CourseCategory" TableName="CourseCategories" SchemaName="dbo" TableAlias="A" Type="SelectObject" IsUpdated="false" XmlComment="Returns a row from the CourseCategory table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="CourseCategories" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Category_Name" TableName="CourseCategories" PropertyName="Category_Name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Category_Desc" TableName="CourseCategories" PropertyName="Category_Desc" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IdNumber" TableName="CourseCategories" PropertyName="IdNumber" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="parent" TableName="CourseCategories" PropertyName="parent" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="enabled" TableName="CourseCategories" PropertyName="enabled" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_date" TableName="CourseCategories" PropertyName="created_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_by" TableName="CourseCategories" PropertyName="created_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_date" TableName="CourseCategories" PropertyName="modified_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_by" TableName="CourseCategories" PropertyName="modified_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="CourseCategories" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="SelectPage" EntityName="CourseCategory" TableName="CourseCategories" SchemaName="dbo" TableAlias="A" Type="SelectPage" IsUpdated="false" XmlComment="Conditionally retrieves one or more rows from the CourseCategory table with paging." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="CourseCategories" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Category_Name" TableName="CourseCategories" PropertyName="Category_Name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Category_Desc" TableName="CourseCategories" PropertyName="Category_Desc" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IdNumber" TableName="CourseCategories" PropertyName="IdNumber" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="parent" TableName="CourseCategories" PropertyName="parent" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="enabled" TableName="CourseCategories" PropertyName="enabled" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_date" TableName="CourseCategories" PropertyName="created_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_by" TableName="CourseCategories" PropertyName="created_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_date" TableName="CourseCategories" PropertyName="modified_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_by" TableName="CourseCategories" PropertyName="modified_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns />
        <OrderByColumns>
          <OrderColumnModel Name="created_date" TableName="CourseCategories" PropertyName="created_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" OrderDirection="Descending" />
        </OrderByColumns>
      </MethodModel>
    </Methods>
  </ClassModel>
  <ClassModel ClassName="CourseDAC" IsUpdated="false" GenerateXmlComments="true" UseDefaultComments="true" XmlComment="course data access component. Manages CRUD operations for the course table." ProductName="TECi.Data" Body="&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Inserts a new row in the Course table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;course&quot;&gt;A course object.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;An updated course object.&lt;/returns&gt;&#xD;&#xA;		public course Create(course course)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;INSERT INTO dbo.courses ([categoryid], [idnumber], [course_name], [course_description], [course_summary], [start_date], [end_date], [enabled], [created_date], [created_by], [modified_date], [modified_by], [completion_tracking], [completion_notify]) &quot; +&#xD;&#xA;				&quot;VALUES(@categoryid, @idnumber, @course_name, @course_description, @course_summary, @start_date, @end_date, @enabled, @created_date, @created_by, @modified_date, @modified_by, @completion_tracking, @completion_notify); SELECT SCOPE_IDENTITY();&quot; ; &#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			var db = new SqlDatabase(base.ConnectionString);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@categoryid&quot;, DbType.Int32, course.categoryid);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@idnumber&quot;, DbType.String, course.idnumber);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@course_name&quot;, DbType.String, course.course_name);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@course_description&quot;, DbType.String, course.course_description);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@course_summary&quot;, DbType.String, course.course_summary);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@start_date&quot;, DbType.DateTime, course.start_date);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@end_date&quot;, DbType.DateTime, course.end_date);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@enabled&quot;, DbType.Boolean, course.enabled);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@created_date&quot;, DbType.DateTime, course.created_date);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@created_by&quot;, DbType.String, course.created_by);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@modified_date&quot;, DbType.DateTime, course.modified_date);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@modified_by&quot;, DbType.String, course.modified_by);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@completion_tracking&quot;, DbType.Int32, course.completion_tracking);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@completion_notify&quot;, DbType.Int32, course.completion_notify);&#xD;&#xA;&#xD;&#xA;				// Get the primary key value.&#xD;&#xA;				course.id = Convert.ToInt32(db.ExecuteScalar(cmd));&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return course;&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Updates an existing row in the Course table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;course&quot;&gt;A course entity object.&lt;/param&gt;&#xD;&#xA;		public void UpdateById(course course)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;UPDATE dbo.courses &quot; +&#xD;&#xA;				&quot;SET &quot; +&#xD;&#xA;					&quot;[categoryid]=@categoryid, &quot; +&#xD;&#xA;					&quot;[idnumber]=@idnumber, &quot; +&#xD;&#xA;					&quot;[course_name]=@course_name, &quot; +&#xD;&#xA;					&quot;[course_description]=@course_description, &quot; +&#xD;&#xA;					&quot;[course_summary]=@course_summary, &quot; +&#xD;&#xA;					&quot;[start_date]=@start_date, &quot; +&#xD;&#xA;					&quot;[end_date]=@end_date, &quot; +&#xD;&#xA;					&quot;[enabled]=@enabled, &quot; +&#xD;&#xA;					&quot;[created_date]=@created_date, &quot; +&#xD;&#xA;					&quot;[created_by]=@created_by, &quot; +&#xD;&#xA;					&quot;[modified_date]=@modified_date, &quot; +&#xD;&#xA;					&quot;[modified_by]=@modified_by, &quot; +&#xD;&#xA;					&quot;[completion_tracking]=@completion_tracking, &quot; +&#xD;&#xA;					&quot;[completion_notify]=@completion_notify &quot; +&#xD;&#xA;				&quot;WHERE [id]=@id &quot;;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			var db = new SqlDatabase(base.ConnectionString);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@categoryid&quot;, DbType.Int32, course.categoryid);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@idnumber&quot;, DbType.String, course.idnumber);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@course_name&quot;, DbType.String, course.course_name);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@course_description&quot;, DbType.String, course.course_description);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@course_summary&quot;, DbType.String, course.course_summary);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@start_date&quot;, DbType.DateTime, course.start_date);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@end_date&quot;, DbType.DateTime, course.end_date);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@enabled&quot;, DbType.Boolean, course.enabled);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@created_date&quot;, DbType.DateTime, course.created_date);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@created_by&quot;, DbType.String, course.created_by);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@modified_date&quot;, DbType.DateTime, course.modified_date);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@modified_by&quot;, DbType.String, course.modified_by);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@completion_tracking&quot;, DbType.Int32, course.completion_tracking);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@completion_notify&quot;, DbType.Int32, course.completion_notify);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@id&quot;, DbType.Int32, course.id);&#xD;&#xA;&#xD;&#xA;				db.ExecuteNonQuery(cmd);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Conditionally deletes one or more rows in the Course table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;id&quot;&gt;A id value.&lt;/param&gt;&#xD;&#xA;		public void DeleteById(int id)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &quot;DELETE dbo.courses &quot; +&#xD;&#xA;										 &quot;WHERE [id]=@id &quot;;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			var db = new SqlDatabase(base.ConnectionString);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@id&quot;, DbType.Int32, id);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;				db.ExecuteNonQuery(cmd);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Returns a row from the Course table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;id&quot;&gt;A id value.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;A course object with data populated from the database.&lt;/returns&gt;&#xD;&#xA;		public course SelectById(int id)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;SELECT [id], [categoryid], [idnumber], [course_name], [course_description], [course_summary]&quot;+&#xD;&#xA;						&quot;, [start_date], [end_date], [enabled], [created_date], [created_by], [modified_date]&quot;+&#xD;&#xA;						&quot;, [modified_by], [completion_tracking], [completion_notify] &quot; +&#xD;&#xA;				&quot;FROM dbo.courses  &quot;  +&#xD;&#xA;				&quot;WHERE [id]=@id &quot;;&#xD;&#xA;&#xD;&#xA;			course course = null;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			var db = new SqlDatabase(base.ConnectionString);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				db.AddInParameter(cmd, &quot;@id&quot;, DbType.Int32, id);&#xD;&#xA;&#xD;&#xA;				using (IDataReader dr = db.ExecuteReader(cmd))&#xD;&#xA;				{&#xD;&#xA;					if (dr.Read())&#xD;&#xA;					{&#xD;&#xA;						// Create a new course&#xD;&#xA;						course = new course();&#xD;&#xA;&#xD;&#xA;						// Read values.&#xD;&#xA;						course.id = GetDataValue&lt;int&gt;(dr, &quot;id&quot;);&#xD;&#xA;						course.categoryid = GetDataValue&lt;int&gt;(dr, &quot;categoryid&quot;);&#xD;&#xA;						course.idnumber = GetDataValue&lt;string&gt;(dr, &quot;idnumber&quot;);&#xD;&#xA;						course.course_name = GetDataValue&lt;string&gt;(dr, &quot;course_name&quot;);&#xD;&#xA;						course.course_description = GetDataValue&lt;string&gt;(dr, &quot;course_description&quot;);&#xD;&#xA;						course.course_summary = GetDataValue&lt;string&gt;(dr, &quot;course_summary&quot;);&#xD;&#xA;						course.start_date = GetDataValue&lt;DateTime&gt;(dr, &quot;start_date&quot;);&#xD;&#xA;						course.end_date = GetDataValue&lt;DateTime&gt;(dr, &quot;end_date&quot;);&#xD;&#xA;						course.enabled = GetDataValue&lt;bool&gt;(dr, &quot;enabled&quot;);&#xD;&#xA;						course.created_date = GetDataValue&lt;DateTime&gt;(dr, &quot;created_date&quot;);&#xD;&#xA;						course.created_by = GetDataValue&lt;string&gt;(dr, &quot;created_by&quot;);&#xD;&#xA;						course.modified_date = GetDataValue&lt;DateTime&gt;(dr, &quot;modified_date&quot;);&#xD;&#xA;						course.modified_by = GetDataValue&lt;string&gt;(dr, &quot;modified_by&quot;);&#xD;&#xA;						course.completion_tracking = GetDataValue&lt;int&gt;(dr, &quot;completion_tracking&quot;);&#xD;&#xA;						course.completion_notify = GetDataValue&lt;int&gt;(dr, &quot;completion_notify&quot;);&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return course;&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Conditionally retrieves one or more rows from the Course table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;categoryid&quot;&gt;A categoryid value.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;A collection of course objects.&lt;/returns&gt;		&#xD;&#xA;		public List&lt;course&gt; Select(int categoryid)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;SELECT [id], [categoryid], [idnumber], [course_name], [course_description], [course_summary]&quot;+&#xD;&#xA;						&quot;, [start_date], [end_date], [enabled], [created_date], [created_by], [modified_date]&quot;+&#xD;&#xA;						&quot;, [modified_by], [completion_tracking], [completion_notify] &quot; +&#xD;&#xA;				&quot;FROM dbo.courses &quot; +&#xD;&#xA;				&quot;WHERE [categoryid]=@categoryid &quot;;&#xD;&#xA;&#xD;&#xA;			List&lt;course&gt; result = new List&lt;course&gt;();&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			var db = new SqlDatabase(base.ConnectionString);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{ &#xD;&#xA;				&#xD;&#xA;				db.AddInParameter(cmd, &quot;@categoryid&quot;, DbType.Int32, categoryid);&#xD;&#xA;				&#xD;&#xA;				using (IDataReader dr = db.ExecuteReader(cmd))&#xD;&#xA;				{&#xD;&#xA;					while (dr.Read())&#xD;&#xA;					{&#xD;&#xA;						// Create a new course&#xD;&#xA;						course course = new course();&#xD;&#xA;&#xD;&#xA;						// Read values.&#xD;&#xA;						course.id = GetDataValue&lt;int&gt;(dr, &quot;id&quot;);&#xD;&#xA;						course.categoryid = GetDataValue&lt;int&gt;(dr, &quot;categoryid&quot;);&#xD;&#xA;						course.idnumber = GetDataValue&lt;string&gt;(dr, &quot;idnumber&quot;);&#xD;&#xA;						course.course_name = GetDataValue&lt;string&gt;(dr, &quot;course_name&quot;);&#xD;&#xA;						course.course_description = GetDataValue&lt;string&gt;(dr, &quot;course_description&quot;);&#xD;&#xA;						course.course_summary = GetDataValue&lt;string&gt;(dr, &quot;course_summary&quot;);&#xD;&#xA;						course.start_date = GetDataValue&lt;DateTime&gt;(dr, &quot;start_date&quot;);&#xD;&#xA;						course.end_date = GetDataValue&lt;DateTime&gt;(dr, &quot;end_date&quot;);&#xD;&#xA;						course.enabled = GetDataValue&lt;bool&gt;(dr, &quot;enabled&quot;);&#xD;&#xA;						course.created_date = GetDataValue&lt;DateTime&gt;(dr, &quot;created_date&quot;);&#xD;&#xA;						course.created_by = GetDataValue&lt;string&gt;(dr, &quot;created_by&quot;);&#xD;&#xA;						course.modified_date = GetDataValue&lt;DateTime&gt;(dr, &quot;modified_date&quot;);&#xD;&#xA;						course.modified_by = GetDataValue&lt;string&gt;(dr, &quot;modified_by&quot;);&#xD;&#xA;						course.completion_tracking = GetDataValue&lt;int&gt;(dr, &quot;completion_tracking&quot;);&#xD;&#xA;						course.completion_notify = GetDataValue&lt;int&gt;(dr, &quot;completion_notify&quot;);&#xD;&#xA;&#xD;&#xA;						// Add to List.&#xD;&#xA;						result.Add(course);&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return result;&#xD;&#xA;		}&#xD;&#xA;">
    <NamespacesToImport />
    <Methods>
      <MethodModel Name="Create" EntityName="course" TableName="courses" SchemaName="dbo" TableAlias="A" Type="Insert" IsUpdated="false" XmlComment="Inserts a new row in the Course table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="id" TableName="courses" PropertyName="id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="categoryid" TableName="courses" PropertyName="categoryid" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="idnumber" TableName="courses" PropertyName="idnumber" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="course_name" TableName="courses" PropertyName="course_name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="course_description" TableName="courses" PropertyName="course_description" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="course_summary" TableName="courses" PropertyName="course_summary" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="start_date" TableName="courses" PropertyName="start_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="end_date" TableName="courses" PropertyName="end_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="enabled" TableName="courses" PropertyName="enabled" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_date" TableName="courses" PropertyName="created_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_by" TableName="courses" PropertyName="created_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_date" TableName="courses" PropertyName="modified_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_by" TableName="courses" PropertyName="modified_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="completion_tracking" TableName="courses" PropertyName="completion_tracking" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="completion_notify" TableName="courses" PropertyName="completion_notify" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns />
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="UpdateById" EntityName="course" TableName="courses" SchemaName="dbo" TableAlias="A" Type="UpdateObject" IsUpdated="false" XmlComment="Updates an existing row in the Course table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="id" TableName="courses" PropertyName="id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="categoryid" TableName="courses" PropertyName="categoryid" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="idnumber" TableName="courses" PropertyName="idnumber" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="course_name" TableName="courses" PropertyName="course_name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="course_description" TableName="courses" PropertyName="course_description" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="course_summary" TableName="courses" PropertyName="course_summary" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="start_date" TableName="courses" PropertyName="start_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="end_date" TableName="courses" PropertyName="end_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="enabled" TableName="courses" PropertyName="enabled" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_date" TableName="courses" PropertyName="created_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_by" TableName="courses" PropertyName="created_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_date" TableName="courses" PropertyName="modified_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_by" TableName="courses" PropertyName="modified_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="completion_tracking" TableName="courses" PropertyName="completion_tracking" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="completion_notify" TableName="courses" PropertyName="completion_notify" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns>
          <FilterColumnModel Name="id" TableName="courses" PropertyName="id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="DeleteById" EntityName="course" TableName="courses" SchemaName="dbo" TableAlias="A" Type="Delete" IsUpdated="false" XmlComment="Conditionally deletes one or more rows in the Course table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns />
        <FilterColumns>
          <FilterColumnModel Name="id" TableName="courses" PropertyName="id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="SelectById" EntityName="course" TableName="courses" SchemaName="dbo" TableAlias="A" Type="SelectObject" IsUpdated="false" XmlComment="Returns a row from the Course table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="id" TableName="courses" PropertyName="id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="categoryid" TableName="courses" PropertyName="categoryid" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="idnumber" TableName="courses" PropertyName="idnumber" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="course_name" TableName="courses" PropertyName="course_name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="course_description" TableName="courses" PropertyName="course_description" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="course_summary" TableName="courses" PropertyName="course_summary" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="start_date" TableName="courses" PropertyName="start_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="end_date" TableName="courses" PropertyName="end_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="enabled" TableName="courses" PropertyName="enabled" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_date" TableName="courses" PropertyName="created_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_by" TableName="courses" PropertyName="created_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_date" TableName="courses" PropertyName="modified_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_by" TableName="courses" PropertyName="modified_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="completion_tracking" TableName="courses" PropertyName="completion_tracking" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="completion_notify" TableName="courses" PropertyName="completion_notify" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns>
          <FilterColumnModel Name="id" TableName="courses" PropertyName="id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="Select" EntityName="course" TableName="courses" SchemaName="dbo" TableAlias="A" Type="Select" IsUpdated="false" XmlComment="Conditionally retrieves one or more rows from the Course table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="id" TableName="courses" PropertyName="id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="categoryid" TableName="courses" PropertyName="categoryid" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="idnumber" TableName="courses" PropertyName="idnumber" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="course_name" TableName="courses" PropertyName="course_name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="course_description" TableName="courses" PropertyName="course_description" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="course_summary" TableName="courses" PropertyName="course_summary" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="start_date" TableName="courses" PropertyName="start_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="end_date" TableName="courses" PropertyName="end_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="enabled" TableName="courses" PropertyName="enabled" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_date" TableName="courses" PropertyName="created_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="created_by" TableName="courses" PropertyName="created_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_date" TableName="courses" PropertyName="modified_date" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="modified_by" TableName="courses" PropertyName="modified_by" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="completion_tracking" TableName="courses" PropertyName="completion_tracking" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="completion_notify" TableName="courses" PropertyName="completion_notify" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns>
          <FilterColumnModel Name="categoryid" TableName="courses" PropertyName="categoryid" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
    </Methods>
  </ClassModel>
</ArrayOfClassModel>