@using CMdm.Framework;
@model CMdm.UI.Web.Models.DqQue.DqqueAuthListModel
@*ViewBag.Title = "Data Quality Rules";
    ViewBag.SubTitle = "List";*@
@{
    ViewBag.Title = "Pending Authorizations";
    //ViewBag.SubTitle = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var defaultGridPageSize = 10;
    var gridPageSizes = "10, 15, 20, 50, 100";
}
<style>
    .nav-tabs-custom > .tab-content {
        color: black;
    }

    .modal-dialog {
        width: 900px;
    }
</style>

@Html.AntiForgeryToken()
<div class="content-header clearfix">
    <h1 class="pull-left">
       Pending Authorizations
    </h1>
    @*@if (!Model.IsLoggedInAsApprover)
    {*@
        <div class="pull-right">
            <button type="button" id="approve-selected" class="btn bg-yellow">
                <i class="fa fa-check-square-o"></i>
                Approve Selected
            </button>
            <button type="button" id="disapprove-modal" data-toggle="modal" data-target="#modal-comment" class="btn bg-purple">
                <i class="fa fa-minus-square-o"></i>
                Disapprove Selected
            </button>
            @*<button type="button" id="delete-selected" class="btn bg-red">
                <i class="fa fa-trash-o"></i>
                Cancel Selected
            </button>*@
        </div>
    
</div>
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            @*<div class="form-group">
            <div class="col-md-4">
                @Html.LabelFor(model => model.CreatedOnFrom)
            </div>
            <div class="col-md-8">
                @Html.CMdmEditorFor(model => model.CreatedOnFrom)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                @Html.LabelFor(model => model.CreatedOnTo)
            </div>
            <div class="col-md-8">
                @Html.CMdmEditorFor(model => model.CreatedOnTo)
            </div>
        </div>*@
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.Label("Customer No")
                                </div>
                                <div class="col-md-8">
                                    @Html.CMdmEditorFor(model => model.SearchName)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.BRANCH_CODE)
                                </div>
                                <div class="col-md-8">
                                    @Html.CMdmDropDownList("BRANCH_CODE", Model.Branches)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.Label("Tier")
                                </div>
                                <div class="col-md-8">
                                    @Html.CMdmDropDownListFor(model => model.TIER, Model.Tiers)
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-4">
                                    <button type="button" id="search-rule" class="btn btn-warning btn-search">
                                        <i class="fa fa-search"></i>
                                        Search
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @*<div class="form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.ISSUE_PRIORITY_DESC)
                                </div>
                                <div class="col-md-8">
                                    @Html.CMdmDropDownList("PRIORITY_CODE", Model.Priorities)
                                </div>
                            </div>*@
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.ISSUE_STATUS_DESC)
                                </div>
                                <div class="col-md-8">
                                    @Html.CMdmDropDownList("STATUS_CODE", Model.Statuses)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.CATALOG_ID)
                                </div>
                                <div class="col-md-8">
                                    @Html.CMdmDropDownList("CATALOG_ID", Model.Catalogs)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @*<em>You have <span class="label label-success">4 Closed</span> issues, <span class="label label-warning">127 pending</span> and <span class="label label-default">2 in progress</span></em>*@

            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="dqauth-grid"></div>

                    <script>
                        $(document).ready(function () {
                            $("#dqauth-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("AuthList", "DQQue"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: additionalData
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors"
                                    },
                                    error: function(e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(gridPageSizes)],
                                    @Html.Partial("_GridPagerMessages")
                                },
                                editable: {
                                    confirmation: "Delete?",
                                    mode: "inline"
                                },
                                scrollable: false,
                                dataBound: onDataBound,
                                columns: [
                                    {
                                        field: "EXCEPTION_ID",
                                        headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: "<input type='checkbox' value='#=EXCEPTION_ID#' class='checkboxGroups'/>",
                                        width: 50
                                    },
                                    {
                                        width: 50,
                                        template: function (dataItem) {
                                        //console.log(dataItem);
                                        //var button = $(this);
                                        //var row = $(this).select().closest("tr"); 
                                        //var dataRow = grid.dataItem(row);
                                        buttons = '<div style="width:80px">';
                                        //buttons += '<buttontype="button" id="validate-profile" class="btn btn-warning">Validate</button>'
                                        //buttons += '<button onclick="validateProfile(' + `'${dataItem.CUST_ID}',${dataItem.BRANCH_CODE},${dataItem.RULE_ID},'${dataItem.CATALOG_TABLE_NAME}'` + ')" type="button" class="btn btn-warning" data-toggle="modal" data-target="#modal-primary">Validate</button>'
                                        buttons += '<button onclick="validateProfile(' + `'${dataItem.EXCEPTION_ID}',${dataItem.BRANCH_CODE},${dataItem.RULE_ID},'${dataItem.CATALOG_TABLE_NAME}'` + ')" type="button" class="btn btn-warning">Validate</button>'
                                        //buttons += '<button type="button" class="btn btn-info" onclick="_modifyProfile(' + `${dataItem}` + ')"  data-toggle="modal" data-target="#modal-primary">Modify</button>'
                                        buttons += '</div>';
                                        //let $button = $(buttons);
                                      
                                        // $button.find('.open-modal').on('click', _modifyProfile(dataItem));
                                        return buttons;
                                    }
                                    },
                                {
                                    field: "REASON",
                                    title: "Exception Reason",
                                    width: 200
                                },{
                                    field: "RULE_NAME",
                                    title: "Rulename",
                                    width: 100
                                },{
                                    field: "BRANCH_NAME",
                                    title: "Branch",
                                    width: 150
                                },{
                                    field: "CUST_ID",
                                    title: "Customer Id",
                                    width: 70
                                },
                                {
                                    field: "FIRSTNAME",
                                    title: "Firstname",
                                    width: 100
                                },
                                {
                                    field: "SURNAME",
                                    title: "Lastname",
                                    width: 100
                                },
                                {
                                    field: "TIER",
                                    title: "Tier",
                                    width: 50
                                },
                                @*@if (1==1)
                                {
                                        <text>{
                                    field: "PRIORITY_CODE",
                                    title: "Priority",
                                            width: 50,
                                            template: '<span class="grid-report-item ' +
                                                '# if(PRIORITY_CODE == 1) {# red #} #' +
                                                '# if(PRIORITY_CODE == 2) {# yellow #} #' +
                                                '# if(PRIORITY_CODE == 3) {# blue #} #' +
                                                '# if(PRIORITY_CODE == 4) {# green #} #' +
                                                '# if(PRIORITY_CODE == 5) {# green #} #' +
                                                '">#=ISSUE_PRIORITY_DESC#</span>'
                                        },</text>
                                    }*@

                                {
                                    field: "RUN_DATE",
                                    title: "Last Run Date",
                                    width: 70,
                                    type: "date",
                                    format: "{0:G}",
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: "#= kendo.toString(kendo.parseDate(RUN_DATE, 'yyyy-MM-dd'), 'dd/MM/yyyy') #"
                                },
                                    @if (1==1)
                                    {
                                        <text>{
                                            field: "STATUS_CODE",
                                            title: "Status",
                                            width: 100,
                                            template: '<span class="grid-report-item ' +
                                                '# if(STATUS_CODE == 2) {# green #} #' +
                                                '# if(STATUS_CODE == 3) {# yellow #} #' +
                                                '# if(STATUS_CODE == 1) {# red #} #' +
                                                '">#=ISSUE_STATUS_DESC#</span>'
                                        },</text>
                                    }
                                   ]
                            });
                        });
                        function showDetails(e) {
                            var row = e.select().closest("tr");
                            // or e.parent().parent();
                            var grid = $('#dqauth-grid').data('kendoGrid');
                            console.log(grid.dataItem(row));
                            var dataItem = grid.dataItem(row);
                        }
                    </script>
                   
                    <script type="text/javascript">
                        var selectedIds = [];
                        var comments = "";

                        $(document).ready(function() {
                            //search button
                            $('#search-rule').click(function() {
                                //search
                                var grid = $('#dqauth-grid').data('kendoGrid');
                                grid.dataSource.page(1); //new search. Set page size to 1
                                //grid.dataSource.read(); we already loaded the grid above using "page" function
                                //clear selected checkboxes
                                $('.checkboxGroups').attr('checked', false).change();
                                selectedIds = [];
                                return false;
                            });
                            $("#@Html.FieldIdFor(model => model.SearchName), #BRANCH_CODE, #ISSUE_STATUS_DESC, #CATALOG_ID").keydown(function (event) {
                                if (event.keyCode == 13) {
                                    $("#search-rule").click();
                                    return false;
                                }
                            });

                            //"approve selected" button
                            $('#approve-selected').click(function(e) {
                                e.preventDefault();

                                var postData = {
                                    selectedIds: selectedIds
                                };
                                addAntiForgeryToken(postData);

                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("ApproveSelected", "DQQue"))",
                                    data: postData,
                                    complete: function(data) {
                                        //reload grid
                                        var grid = $('#dqauth-grid').data('kendoGrid');
                                        grid.dataSource.read();
                                    },
                                    error: function(xhr, ajaxOptions, thrownError) {
                                        alert(thrownError);
                                    },
                                    traditional: true
                                });
                                return false;
                            });

                            //"validate" button
                            @*$('#validate-profile').click(function(e) {
                                e.preventDefault();

                                var customerId = ${ dataItem.EXCEPTION_ID };
                                var branchCode = ${ dataItem.BRANCH_CODE };
                                var ruleId = ${ dataItem.RULE_ID };
                                var table = { dataItem.CATALOG_TABLE_NAME };

                                var postData = {
                                    customerId: customerId,
                                    branch: branchCode,
                                    rule: ruleId,
                                    table: table,
                                };
                                addAntiForgeryToken(postData);

                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("ValidateProfile", "DQQue"))",
                                    data: postData,
                                    complete: function(data) {
                                        //reload grid
                                        var grid = $('#dqauth-grid').data('kendoGrid');
                                        grid.dataSource.read();
                                    },
                                    error: function(xhr, ajaxOptions, thrownError) {
                                        alert(thrownError);
                                    },
                                    traditional: true
                                });
                                return false;
                            });*@

                            //"disapprove selected" button
                            $('#disapprove-selected').click(function (e) {
                                var comments = $('#rejectComments').val();
                                $('#modal-comment').modal('toggle');
                                e.preventDefault();

                                var postData = {
                                    selectedIds: selectedIds,
                                    comments: comments
                                };
                                addAntiForgeryToken(postData);

                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("DisapproveSelected", "DQQUe"))",
                                    data: postData,
                                    complete: function(data) {
                                        //reload grid
                                        var grid = $('#dqauth-grid').data('kendoGrid');
                                        grid.dataSource.read();
                                    },
                                    error: function(xhr, ajaxOptions, thrownError) {
                                        alert(thrownError);
                                    },
                                    traditional: true
                                });
                                return false;
                            });

                            //"delete selected" button
                            $('#delete-selected').click(function(e) {
                                e.preventDefault();

                                var postData = {
                                    selectedIds: selectedIds
                                };
                                addAntiForgeryToken(postData);

                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("CancelSelected", "DQQue"))",
                                    data: postData,
                                    complete: function(data) {
                                        //reload grid
                                        var grid = $('#dqauth-grid').data('kendoGrid');
                                        grid.dataSource.read();
                                    },
                                    error: function(xhr, ajaxOptions, thrownError) {
                                        alert(thrownError);
                                    },
                                    traditional: true
                                });
                                return false;
                            });


                            //$('#mastercheckbox').click(function() {
                            //    $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                            //});

                            $('#mastercheckbox').change(function (ev) {
                                var checked = ev.target.checked;
                                $('.checkboxGroups').each(function (idx, item) {
                                    if (checked) {
                                        if (!($(item).closest('tr').is('.k-state-selected'))) {
                                            $(item).click();
                                        }
                                    } else {
                                        if ($(item).closest('tr').is('.k-state-selected')) {
                                            $(item).click();
                                        }
                                    }
                                });
                            });


                            //wire up checkboxes.
                            $('#dqauth-grid').on('change', 'input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]', function(e) {
                                var $check = $(this);
                                if ($check.is(":checked") == true) {
                                    var checked = jQuery.inArray($check.val(), selectedIds);
                                    if (checked == -1) {
                                        //add id to selectedIds.
                                        selectedIds.push($check.val());
                                    }
                                } else {
                                    var checked = jQuery.inArray($check.val(), selectedIds);
                                    if (checked > -1) {
                                        //remove id from selectedIds.
                                        selectedIds = $.grep(selectedIds, function(item, index) {
                                            return item != $check.val();
                                        });
                                    }
                                }
                                updateMasterCheckbox();
                            });
                        });

                        function additionalData() {
                            var data = {
                                SearchName: $('#@Html.FieldIdFor(model => model.SearchName)').val(),
                                BRANCH_CODE: $('#BRANCH_CODE').val(),
                                PRIORITY_CODE: $('#PRIORITY_CODE').val(),
                                STATUS_CODE: $('#STATUS_CODE').val(),
                                CATALOG_ID: $('#CATALOG_ID').val(),
                                TIER: $('#TIER').val(),
                                @*CreatedOnFrom: $('#@Html.FieldIdFor(model => model.CreatedOnFrom)').val(),
                                CreatedOnTo: $('#@Html.FieldIdFor(model => model.CreatedOnTo)').val(),
                                    Dates in kendo :https://blog.falafel.com/passing-dates-kendo-ui-aspnet/
                                    *@

                            };
                            addAntiForgeryToken(data);
                            return data;
                        }

                        function onDataBound(e) {

                            $('#dqauth-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').each(function() {
                                var currentId = $(this).val();
                                var checked = jQuery.inArray(currentId, selectedIds);
                                //set checked based on if current checkbox's value is in selectedIds.
                                $(this).attr('checked', checked > -1);
                            });

                            updateMasterCheckbox();
                        }

                        function updateMasterCheckbox() {
                            var numChkBoxes = $('#dqauth-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').length;
                            var numChkBoxesChecked = $('#dqauth-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]:checked').length;
                            $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                        }

                    </script>
                </div>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("ApproveSelected", "DQQue", FormMethod.Post, new { id = "approve-selected-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
}

<script type="text/javascript">
    $(document).ready(function () {
        $('#approve-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            $('#approve-selected-form #selectedIds').val(ids);
            $('#approve-selected-form').submit();
            return false;
        });
    });
</script>
@section Scripts {
  
<script type="text/javascript">

    //biodata
    function ApproveData() {
        //  alert('Hello');saving display
        // document.getElementById("display").innerHTML = "";
        $("#display").css({ 'display': 'none' });
        $("#update").css({ 'display': 'none' });
        $("#saving").css({ 'display': 'block' });

        var frm = $('#biodata');

        var url = "@Url.Action("ApproveBioData", "Dynamic")"; // the script where you handle the form input.
        $.ajax({
            type: "POST",
            url: url,
            data: $("#biodata").serialize(), // serializes the form's elements.
            success: function (data) {
                // alert(data); // show response from the server.
                $("#saving").css({ 'display': 'none' });
                $("#display").css({ 'display': 'none' });
                $("#update").css({ 'display': 'block' });
                //update
                document.getElementById("update").innerHTML = "";
                document.getElementById("update").innerHTML = data;
            }
        });

        e.preventDefault(); // avoid to execute the actual submit of the form.
    };

        //biodata
        function DisapproveData () {
            $("#display").css({ 'display': 'none' });
            $("#update").css({ 'display': 'none' });
            $("#saving").css({ 'display': 'block' });

            var frm = $('#biodata');

            var url = "@Url.Action("DisapproveBioData", "Dynamic")"; // the script where you handle the form input.
            $.ajax({
                type: "POST",
                url: url,
                data: $("#biodata").serialize(), // serializes the form's elements.
                success: function (data) {
                    // alert(data); // show response from the server.
                    $("#saving").css({ 'display': 'none' });
                    $("#display").css({ 'display': 'none' });
                    $("#update").css({ 'display': 'block' });
                    //update
                    document.getElementById("update").innerHTML = "Record Rejected";
                    document.getElementById("update").innerHTML = data;
                }
            });

            e.preventDefault(); // avoid to execute the actual submit of the form.
        };



    //biodata
   function submitBioData() {
       //  alert('Hello');saving display
       // document.getElementById("display").innerHTML = "";
       $("#display").css({ 'display': 'none' });
       $("#update").css({ 'display': 'none' });
       $("#saving").css({ 'display': 'block' });

        var frm = $('#biodata');

        var url = "@Url.Action("SaveBioData", "Dynamic")"; // the script where you handle the form input.
        $.ajax({
            type: "POST",
            url: url,
            data: $("#biodata").serialize(), // serializes the form's elements.
            success: function (data) {
                // alert(data); // show response from the server.
                $("#saving").css({ 'display': 'none' });
                $("#display").css({ 'display': 'none' });
                $("#update").css({ 'display': 'block' });
                //update
                document.getElementById("update").innerHTML = "";
                document.getElementById("update").innerHTML = data;
            }
        });

        e.preventDefault(); // avoid to execute the actual submit of the form.
    };

    //validateProfile
    function validateProfile(ex_id,branch,rule,table)
    {
        var postData = {
            exceptionId: ex_id,
            branch: branch,
            rule: rule,
            table: table,
        };
        addAntiForgeryToken(postData);

        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.Action("ValidateProfile", "DQQue"))",
            contentType: 'application/json; charset=utf-8',
            data: postData,
            success: function (data) {
                if (data.success)
                    //alert(data.url);
                    window.location = data.url;
            },
            error: function(xhr, ajaxOptions, thrownError) {
                alert(thrownError);
            },
            traditional: true
        });
        return false;

        @*if(table=='CDMA_INDIVIDUAL_NEXT_OF_KIN'){

            window.location.href = `/CustNok/Authorize/${cus_id}`;
            //window.location.href = '@Url.Action("Edit", "CustNok", new { @id = "${cus_id}" })';
            /* Url.Action("Edit", "CustNok", new { id = cus_id});*/

        }else{
            $("#update").css({ 'display': 'none' });
            var queryString = "c_id=" + cus_id;
            queryString += "&branch=" + branch + "&rule=" + rule + "&table=" + table;
            //alert(cus_id);
            $("#loading").css({ 'display': 'block' });
            $("#display").css({ 'display': 'none' });
            $.ajax({url: "@Url.Action("DataValidation", "Dynamic")",
                type: 'get',
                data: queryString,
                cache: false,
                success: function (data) {
                    // alert(data);
                    $("#loading").css({ 'display': 'none' });
                    $("#display").css({ 'display': 'block' });

                    document.getElementById("display").innerHTML = "";
                    // document.getElementById("display").innerHTML="hello";
                    // var response = jQuery.parseJSON(data);
                    //alert(response);
                    document.getElementById("display").innerHTML = data;
                }
            });
        //}*@

    }
</script>
}

<div class="modal fade" id="modal-comment" role="dialog" aria-labelledby="modal-comment-label" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Reason for rejection</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <textarea class="form-control" rows="3" placeholder="Add comments here" id="rejectComments"></textarea>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" id="disapprove-selected" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>


<div class="modal modal-primary fade" id="modal-primary">
    <div class="modal-dialog">
        <div class="modal-content">
            <center><div id="loading"><img src="~/AdminLTE/dist/img/loading.gif"></div></center>
            <div class="modal-body" style="display:none" id="update">

            </div>


            <div class="modal-body" id="display">

            </div>
            <div id="saving" class="box box-danger box-solid" style="display:none">
                <div class="box-header">
                    <h3 class="box-title">Updating Record</h3>
                </div>
                <div class="box-body">
                    Saving record,please wait...
                </div>
                <!-- /.box-body -->
                <!-- Loading (remove the following to stop the loading)-->
                <div class="overlay">
                    <i class="fa fa-refresh fa-spin"></i>
                </div>
                <!-- end loading -->
            </div>

        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<script>
    function loadlga() {

        var itemSelected = $("#STATES_RES").val();

        var queryString = "state_id=" + itemSelected;

       // $("#lgloading").css({ 'display': 'block' });
        $("#lgloading").show();
       // alert(itemSelected);
        $.ajax({url: "@Url.Action("loadlga", "Dynamic")",
            type: 'get',data: queryString,cache: false,
        success: function (data) {
            // alert(data);

            $("#lgloading").css({ 'display': 'none' });

            document.getElementById("LGA").innerHTML = "";

            document.getElementById("LGA").innerHTML = data;
        }
    }
                   );




    }
    function approveAccInfo() {

        //alert('Hello');//saving display  ApproveBioData
        // document.getElementById("display").innerHTML = "";
        $("#display").css({ 'display': 'none' });
        $("#update").css({ 'display': 'none' });
        $("#saving").css({ 'display': 'block' });

        var frm = $('#biodata');

        var url = "@Url.Action("approveAccInfodata", "Dynamic")"; // the script where you handle the form input.
        $.ajax({
            type: "POST",
            url: url,
            data: $("#biodata").serialize(), // serializes the form's elements.
            success: function (data) {
                // alert(data); // show response from the server.
                $("#saving").css({ 'display': 'none' });
                $("#display").css({ 'display': 'none' });
                $("#update").css({ 'display': 'block' });
                //update
                document.getElementById("update").innerHTML = "";
                document.getElementById("update").innerHTML = data;
            }
        });

      //  e.preventDefault(); // avoid to execute the actual submit of the form.
    }
    
   

</script>
